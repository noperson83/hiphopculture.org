# Generated by Django 3.2.25 on 2025-02-17 04:40

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('project', '0001_initial'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
        ('material', '0002_auto_20250216_2140'),
        ('contenttypes', '0002_remove_content_type_name'),
    ]

    operations = [
        migrations.CreateModel(
            name='Calendar',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=200, verbose_name='name')),
                ('slug', models.SlugField(max_length=200, unique=True, verbose_name='slug')),
            ],
            options={
                'verbose_name': 'calendar',
                'verbose_name_plural': 'calendars',
            },
        ),
        migrations.CreateModel(
            name='Rule',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=32, verbose_name='name')),
                ('description', models.TextField(verbose_name='description')),
                ('frequency', models.CharField(choices=[('YEARLY', 'Yearly'), ('MONTHLY', 'Monthly'), ('WEEKLY', 'Weekly'), ('DAILY', 'Daily'), ('HOURLY', 'Hourly'), ('MINUTELY', 'Minutely'), ('SECONDLY', 'Secondly')], max_length=10, verbose_name='frequency')),
                ('params', models.TextField(blank=True, verbose_name='params')),
            ],
            options={
                'verbose_name': 'rule',
                'verbose_name_plural': 'rules',
            },
        ),
        migrations.CreateModel(
            name='Event',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=255, verbose_name='title')),
                ('text', models.TextField(blank=True, help_text='Contractor notes', null=True)),
                ('equip', models.TextField(blank=True, help_text='Equipment', null=True)),
                ('details', models.TextField(blank=True, help_text='Textual Notes', null=True)),
                ('description', models.TextField(blank=True, verbose_name='description')),
                ('start_time', models.TimeField(blank=True, help_text='Meet at the office', null=True)),
                ('start', models.DateTimeField(db_index=True, verbose_name='start')),
                ('end', models.DateTimeField(db_index=True, help_text='The end time must be later than the start time.', verbose_name='end')),
                ('dist_time', models.TimeField(blank=True, help_text='Pickup parts', null=True)),
                ('created_on', models.DateTimeField(auto_now_add=True, verbose_name='created on')),
                ('updated_on', models.DateTimeField(auto_now=True, verbose_name='updated on')),
                ('end_recurring_period', models.DateTimeField(blank=True, db_index=True, help_text='This date is ignored for one time only events.', null=True, verbose_name='end recurring period')),
                ('color_event', models.CharField(blank=True, max_length=10, verbose_name='Color event')),
                ('artist', models.ManyToManyField(blank=True, help_text='Choose field ArtistProfile', related_name='SchArtistProfile', to=settings.AUTH_USER_MODEL)),
                ('calendar', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='schedule.calendar', verbose_name='calendar')),
                ('creator', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='creator', to=settings.AUTH_USER_MODEL, verbose_name='creator')),
                ('distributor', models.ForeignKey(blank=True, help_text='distributor', null=True, on_delete=django.db.models.deletion.SET_NULL, to='material.distributor')),
                ('lead', models.ForeignKey(blank=True, help_text='Choose artists', null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='SchLead', to=settings.AUTH_USER_MODEL)),
                ('project', models.ForeignKey(help_text='Project', null=True, on_delete=django.db.models.deletion.SET_NULL, to='project.project')),
                ('rule', models.ForeignKey(blank=True, help_text="Select '----' for a one time only event.", null=True, on_delete=django.db.models.deletion.CASCADE, to='schedule.rule', verbose_name='rule')),
            ],
            options={
                'verbose_name': 'event',
                'verbose_name_plural': 'events',
                'index_together': {('start', 'end')},
            },
        ),
        migrations.CreateModel(
            name='Occurrence',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(blank=True, max_length=255, verbose_name='title')),
                ('description', models.TextField(blank=True, verbose_name='description')),
                ('start', models.DateTimeField(db_index=True, verbose_name='start')),
                ('end', models.DateTimeField(db_index=True, verbose_name='end')),
                ('cancelled', models.BooleanField(default=False, verbose_name='cancelled')),
                ('original_start', models.DateTimeField(verbose_name='original start')),
                ('original_end', models.DateTimeField(verbose_name='original end')),
                ('created_on', models.DateTimeField(auto_now_add=True, verbose_name='created on')),
                ('updated_on', models.DateTimeField(auto_now=True, verbose_name='updated on')),
                ('event', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='schedule.event', verbose_name='event')),
            ],
            options={
                'verbose_name': 'occurrence',
                'verbose_name_plural': 'occurrences',
                'index_together': {('start', 'end')},
            },
        ),
        migrations.CreateModel(
            name='EventRelation',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('object_id', models.IntegerField(db_index=True)),
                ('distinction', models.CharField(max_length=20, verbose_name='distinction')),
                ('content_type', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='contenttypes.contenttype')),
                ('event', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='schedule.event', verbose_name='event')),
            ],
            options={
                'verbose_name': 'event relation',
                'verbose_name_plural': 'event relations',
                'index_together': {('content_type', 'object_id')},
            },
        ),
        migrations.CreateModel(
            name='CalendarRelation',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('object_id', models.IntegerField(db_index=True)),
                ('distinction', models.CharField(max_length=20, verbose_name='distinction')),
                ('inheritable', models.BooleanField(default=True, verbose_name='inheritable')),
                ('calendar', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='schedule.calendar', verbose_name='calendar')),
                ('content_type', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='contenttypes.contenttype')),
            ],
            options={
                'verbose_name': 'calendar relation',
                'verbose_name_plural': 'calendar relations',
                'index_together': {('content_type', 'object_id')},
            },
        ),
    ]
